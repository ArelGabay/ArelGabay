name: ðŸ¤– Update README with Random Fun Fact

on:
  schedule:
    - cron: '*/15 * * * *'
  workflow_dispatch:

permissions:
  contents: write

jobs:
  update-readme:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout with full history and token
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          persist-credentials: true
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Generate random fun fact
        run: |
          import random, re

          facts = [
              "Bananas are berries, but strawberries aren't.",
              "Honey never spoils. Archaeologists found 3,000-year-old honey and it was still good!",
              "Octopuses have three hearts.",
              "Sharks are older than trees.",
              "The Eiffel Tower can grow over 6 inches during summer."
          ]
          chosen = random.choice(facts)
          
          # Read the current README.md file.
          with open("README.md", "r") as file:
              content = file.read()
          
          # Replace the fun fact line.
          new_content = re.sub(
              r'- âš¡ Fun fact: \*\*.*?\*\*',
              f'- âš¡ Fun fact: **{chosen}**',
              content
          )
          
          with open("README.md", "w") as file:
              file.write(new_content)
        shell: python

      - name: Commit and push changes using rebase with retry loop
        run: |
          set -e  # exit immediately if any command fails
          # Set Git identity
          git config --global user.name 'github-actions'
          git config --global user.email 'actions@github.com'
          
          # Rebase local branch on top of remote main to catch any new changes.
          git pull origin main --rebase
          
          # Stage the updated README.md.
          git add README.md
          
          # If there are no changes, exit gracefully.
          if git diff --cached --quiet; then
            echo "No changes to commit"
            exit 0
          fi
          
          # Create the commit.
          git commit -m "ðŸ”„ Updated fun fact"
          
          # Try pushing the changes, retrying if needed.
          max_attempts=5
          attempt=1
          while [ $attempt -le $max_attempts ]; do
            echo "Push attempt $attempt..."
            if git push --force-with-lease origin main; then
              echo "Push succeeded."
              exit 0
            fi
            echo "Push failed on attempt $attempt. Retrying in 10 seconds..."
            sleep 10
            # Rebase again to integrate any new remote changes.
            git pull origin main --rebase
            attempt=$((attempt+1))
          done
          
          echo "Push failed after $max_attempts attempts. Exiting."
          exit 1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
